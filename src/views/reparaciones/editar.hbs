<!DOCTYPE html>
<html lang="es">

{{>headerId}}

<body>
  <style>
    /* Estilos para el popover */
    .custom-popover {
      position: relative;
      max-width: 330px;
      border: 3px gray solid;
      /* Reemplaza esto con el color hexadecimal que corresponda a --bd-violet-bg */
      background-color: white;
      /* Reemplaza esto con el color hexadecimal que corresponda a --bd-violet-bg */
      color: black;
      /* Reemplaza esto con el color hexadecimal que corresponda a --bs-white */
      padding-left: 0;
      padding-right: 0;
      padding-top: 0;
      padding-bottom: 0;
    }

    /* Estilos para la flecha del popover */
    .custom-popover::before {
      content: "";
      position: absolute;
      top: 50%;
      left: -16px;
      /* Ubica la flecha justo a la izquierda del popover */
      border-width: 8px;
      border-style: solid;
      border-color: transparent black transparent transparent;
      /* Utiliza el color correspondiente a --bd-violet-bg */
      transform: translateY(-50%);
      border-right-color: gray;
      /* Agrega un borde negro de 1px a la derecha de la flecha */
    }


    #descripcion_R,
    #descripcion,
    #observacion_R,
    #observacion {
      border-radius: 0;
      border: 1px rgb(206, 212, 218) solid;
      line-height: 1.5;
      max-height: 200px;
      padding-top: 0;
      height: 60px;
    }

    .btn {
      border-radius: 8px;
    }

    .fa-trash:hover {
      color: red;
    }

    #mensajeErrorTotal,
    #mensajeErrorFechaEntrega,
    #mensajeErrorArticulo,
    #mensajeErrorDescripcion,
    #mensajeErrorObservacion {
      display: none;
      color: red;
      margin-top: 5px;
    }

    #mensajeErrorTotal .icono,
    #mensajeErrorFechaEntrega .icono,
    #mensajeErrorArticulo .icono,
    #mensajeErrorDescripcion .icono,
    #mensajeErrorObservacion .icono {
      display: inline-block;
      vertical-align: middle;
      margin-right: 5px;
      width: 15px;
      height: 15px;
    }


    .fa-pen:hover {
      color: #0275d8;
    }

    .fa-trash:hover {
      color: red;
    }

    .boton-reparacion {
      display: inline-block;
      vertical-align: middle;
      margin-right: 10px;
    }

    /* Add this style to your existing CSS */
    .table-container {
      max-height: 400px;
      height: auto;
      /* Adjust this value as per your requirement */
      overflow-y: auto;
      position: relative;
      /* Add this to enable positioning of thead */
    }

    /* Add this style to fix thead */
    .table-container table {
      position: relative;
    }

    .table-container thead {
      position: sticky;
      top: 0;
      z-index: 1;
    }
  </style>

  <!--Barra de navegación-->
  {{>barId}}
  <!--Barra de navegación-->

  {{#each reparacion}}
  <form action="/reparaciones_editar/{{idReparacion}}" method="post" onsubmit="return validarEnvio()"
    id="FormEditarReparacion">


    <!--Start Card&Form-->
    <div class="card" style="width: 98%; border-radius: 0; margin-left:1%; margin-top: 60px;">
      <div class="card-body">
        <h6 class="card-title" style="margin-bottom: 1%;">Editar Reparación</h6>

        <div class="row">
          <div class="col-3">
            <!--Start Card #1-->
            <div class="card" style="border-radius: 0; width: 100%; margin-bottom: 3%;">
              <div class="card-body">
                <h6 class="card-title" style="margin-bottom: 2%;">Reparación</h6>

                <!--Input Cliente-->
                <label class="form-label" for="idCliente">Cliente</label>
                <!-- <input type="text" class="form-control form-control-sm" list="lis_clientes" style="border-radius: 0;"
                  id="idCliente" name="idCliente" autocomplete="off" oninput="val_cliente()" value="{{idInfo}}">
-->
                <div class="input-group input-group-sm">
                  <input type="text" class="form-control" aria-describedby="cliente-sm"
                    style="border-radius: 0;" value="{{idInfo}}" readonly>
                  <div class="input-group-prepend">

                    <a type="button" data-bs-toggle="popover" data-bs-html="true" data-bs-trigger="hover"
                      data-bs-custom-class="custom-popover" title="<b>Cliente Reparación {{cont}}</b>"
                      data-bs-placement="right" data-bs-content="
                            <div class='row'>
                                <div class='col-md-3'>
                                    <img src='https://icons.iconarchive.com/icons/fa-team/fontawesome/512/FontAwesome-User.png' width='100' />
                                </div>
                                <div class='col-md-9'>
                                    <b>Nombre:</b> {{userName}}<br>
                                    <b>Teléfono:</b> {{userTell}}<br>
                                    <b>Correo:</b> {{userEmail}}<br>
                                </div>
                            </div>
                            ">

                      <span class="input-group-text" id="cliente-sm"><i class="fas fa-user"
                          style="color:black"></i></span>
                    </a>
                  </div>
                </div>
                <!--<datalist id="lis_clientes">
                  {{#each clientes}}
                  <option value="{{correo}}">IdCliente({{idAccess}}) Correo({{correo}})</option>
                  {{/each}}
                </datalist>
                <div id="mensajeErrorCliente"></div>-->

                <!--End Input Cliente-->

                <!--Input Fecha Entrega-->
                <label class="form-label" for="fechaEntrega">Fecha Entrega</label>
                <input type="date" class="form-control form-control-sm" style="border-radius: 0;" id="fechaEntrega"
                  name="fechaEntrega" oninput="val_f_entrega()" autocomplete="off" value="{{fechaEntrega}}">
                <div id="mensajeErrorFechaEntrega"></div>
                <!--End Input Fecha Entrega-->

                <!--Input Total-->
                <label class="form-label mt-2" for="total">Total</label>
                <input type="number" class="form-control form-control-sm  mb-2" style="border-radius: 0;" id="total"
                  name="total" oninput="val_total()" autocomplete="off" min="50" value="{{total}}">
                <div id="mensajeErrorTotal"></div>
                <!--End Input Total-->

              </div>
            </div>
            <!--End Card #1-->

          </div>
          <div class="col-9">

            <!--Start Card #2-->
            {{#if estado1}}

            <div class="card mb-3" style="border-radius: 0; width: 100%;">
              <div class="card-body">
                <div class="row">
                  <div class="col-md-10">
                    <h6 class="card-title">Agregar artículo a reparar</h6>

                    <div class="row">
                      <div class="col-md-4">
                        <!--Input Artículo-->
                        <label class="form-label mt-3" for="articulo_R">Artículo</label>
                        <input type="text" class="form-control form-control-sm" style="border-radius: 0;"
                          id="articulo_R" autocomplete="off" oninput="val_articulo()">
                        <div id="mensajeErrorArticulo"></div>
                        <!--End Input Artículo-->
                      </div>
                      <div class="col-md-4">
                        <!--Input Descripción-->
                        <label class="form-label" for="descripcion_R">Descripción</label>
                        <textarea class="form-control form-control-sm" style="border-radius: 0;" id="descripcion_R"
                          autocomplete="off" oninput="val_descripcion()"></textarea>
                        <div id="mensajeErrorDescripcion"></div>
                        <!--End Input Descripción-->
                      </div>
                      <div class="col-md-4">

                        <!--Input Observación-->
                        <label class="form-label" for="observacion_R">Observaciones</label>
                        <textarea class="form-control form-control-sm" style="border-radius: 0;" id="observacion_R"
                          autocomplete="off" oninput="val_observacion()"></textarea>
                        <div id="mensajeErrorObservacion"></div>
                      </div>
                      <!--End Input Observación-->

                    </div>
                  </div>

                  <div class="col-md-2">
                    <!--Start Btn Agregar-->
                    <i class="fa-solid fa-circle-plus fa-2x mt-5" style="margin-left: 25%;" type="button"
                      id="btnAgregarArticulo" onclick="agregarArticulo();"></i>
                    <!--End Btn Agregar-->
                  </div>
                </div>
              </div>
            </div>
            <!--End Card #2-->

            {{/if}}

            {{/each}}

            <!--Start Card #3-->
            <div class="card" style="width: 100%; border-radius: 0;">
              <div class="card-body">
                <h6 class="card-title">artículos a reparar</h6>
                <!--Start Table-->
                <div class="table-container">
                  <table class="table table-sm">
                    <thead class="table" style="background-color: #282d32; color:white;">
                      <tr style="text-align: center;">
                        <th>#</th>
                        <th> Artículo</th>
                        <th> Estado</th>
                        <th> Funciones </th>
                      </tr>
                    </thead>
                    <tbody id="ListaArticulos">
                      {{#each detallesreparacion}}

                      <tr class="clickable-row" id="{{cont}}">
                        <td class="text-center">{{cont}}</td>
                        <td class="text-center">
                          <input type="hidden" name="idDetalleReparacion_1" value="{{idDetalleReparacion}}">
                          <input type="hidden" name="articulo_1" id="articulo_1_{{cont}}" value="{{articulo}}">

                          <input name="articulo_1_a" value="{{articulo}}" oninput="updateValueInput(this)"
                            style="border-radius: 0; border: 1px rgb(206, 212, 218) solid;">
                        </td>

                        {{#if estado1}}
                        <td class="p-3 text-center">
                          <select name="estado_1" style="text-align: center; width: 100%;"
                            onchange="updateValueSelect(this)">
                            <option value="{{estado}}" selected>{{estado}}</option>
                            <option value="Proceso">En Proceso</option>
                            <option value="Terminado">Terminado</option>
                          </select>
                        </td>
                        <td class="text-center">
                          <a class="expand-button boton-reparacion" type="button">
                            <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
                            <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
                          </a>

                          <a class="boton-reparacion" href="#" onclick="eliminarArticulo({{cont}})"
                            style="color: #292b2c;">
                            <i class="fas fa-trash"></i>
                          </a>
                        </td>
                        {{/if}}
                        {{#if estado2}}
                        <td class="p-3 text-center">
                          <select name="estado_1" style="text-align: center; width: 100%;"
                            onchange="updateValueSelect(this)">
                            <option value="{{estado}}" selected>En {{estado}}</option>
                            <option value="Terminado">Terminado</option>
                          </select>
                        </td>
                        <td class="text-center">
                          <a class="expand-button boton-reparacion" type="button">
                            <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
                            <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
                          </a>
                          <!--
                          <a class="boton-reparacion" href="#" onclick="eliminarArticulo({{cont}})"
                            style="color: #292b2c;">
                            <i class="fas fa-trash"></i>
                          </a>-->
                        </td>

                        {{/if}}
                        {{#if estado3}}
                        <td class="p-3 text-center">
                          <select name="estado_1" style="text-align: center; width: 100%;"
                            onchange="updateValueSelect(this)">
                            <option value="{{estado}}" selected>{{estado}}</option>
                            <option value="Proceso">En Proceso</option>
                          </select>
                        </td>
                        <td class="text-center">
                          <a class="expand-button boton-reparacion" type="button">
                            <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
                            <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
                          </a>
                        </td>

                        {{/if}}
                      </tr>

                      <tr class="extra-row" style="display:none;">
                        <td colspan="4">
                          <div class="card" style="width: 100%; border-radius: 0;">
                            <div class="card-body">
                              <div class="row">
                                <div class="col-md-9">

                                  <label class="form-label mt-1"
                                    for="descripcion_{{idDetalleReparacion}}">Descripción</label>
                                  <textarea class="form-control form-control-sm des"
                                    style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;"
                                    id="descripcion_{{idDetalleReparacion}}" oninput="updateValueTextarea(this)"
                                    name="descripcion_1">{{descripcion}}</textarea>
                                </div>

                                <div class="col-md-3">
                                  <center>
                                    <button type="button" class="btn-reparacion btn-sm mt-4" data-toggle="modal"
                                      data-target="#insumos_{{cont}}"
                                      style="border-radius: 8px; border: 1px gray solid;">
                                      <i class="fa-solid fa-dolly fa-2x"></i><br>
                                      <p class="pb-0 mb-0">Agregar<br>Insumos</p>
                                    </button>
                                  </center>

                                </div>
                              </div>

                              <div class="row">
                                <div class="col-md-8">

                                  <label class="form-label mt-2"
                                    for="observacion_{{idDetalleReparacion}}">Observaciones</label>
                                  <textarea class="form-control form-control-sm ob mb-2"
                                    style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;"
                                    id="observacion_{{idDetalleReparacion}}" oninput="updateValueTextarea(this)"
                                    name="observacion_1">{{observacion}}</textarea>

                                </div>
                                <div class="col-md-4">
                                  <label class="form-label mt-4" for="observacion_R">Última_Actualización</label>
                                  <input class="form-control form-control-sm" style="border-radius: 0;" type="text"
                                    value="{{fechaEstado}}" readonly>
                                </div>
                              </div>
                            </div>
                          </div>
                        </td>
                      </tr>
                      {{/each}}

                    </tbody>
                  </table>
                </div>
                <!--End Table-->
                <div class="row">
                  <div class="col-md-5"></div>
                  <div class="col-md-2">
                    <div class="pagination">
                      <button type="button" class="btn btn-outline-secondary btn-sm prev-btn mt-1"><i
                          class="fa-solid fa-arrow-left"></i></button>
                      <button type="button" class="btn btn-outline-secondary btn-sm next-btn mt-1 ml-1"><i
                          class="fa-solid fa-arrow-right"></i></button>
                    </div>
                  </div>
                  <div class="col-md-5"></div>
                </div>
              </div>
            </div>
            <!--End Card #3-->

            <div class="row">
              <div class="col-8"></div>
              <div class="col-4">
                <!--Start Btn Cancelar-->
                <a class="btn btn-danger btn-sm" href="/reparaciones" style="margin-top: 1px;"
                  type="button">Cancelar</a>
                <!--End Btn Cancelar-->

                <!--Start Btn Registrar-->
                <button type="submit" id="btnRegistrar" class="btn btn-success btn-sm" style="margin-bottom: 1px;">
                  Guardar Cambios</button>
                <!--End Btn Regiastrar-->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!--End Card&Form-->

    <div id="modales">
      <datalist id="lis_Insumos">
        {{#each insumos}}
        <option value="{{nombre}}">nombre({{nombre}}) medida({{medida}}) stock({{stock}})</option>
        {{/each}}
      </datalist>

      {{#each detallesreparacion}}

      <div class="modal fade modalP" id="insumos_{{cont}}" tabindex="-1" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Insumos Requeridos Artículo (existente) #{{contMas}}</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">

              <!--Start Card-->
              <div class="card" style="border-radius: 0; width: 100%;">
                <div class="card-body">
                  <h6 class="card-title">Agregar Inusmo</h6>
                  <div class="row">
                    <div class="col-md-10">

                      <div class="row">
                        <div class="col-md-7">

                          <!--Input Insumo-->
                          <label class="form-label" for="idInsumo">Insumo</label>
                          <input type="text" class="form-control form-control-sm" list="lis_Insumos"
                            style="border-radius: 0; width: 100%;" id="idInsumo_{{cont}}" autocomplete="off">
                          <!--<div id="mensajeErrorInsumo"></div> oninput="val_Insumo()"-->
                          <!--End Input Insumo-->

                        </div>

                        <div class="col-md-5">

                          <!--Input Cantidad-->
                          <label class="form-label" for="cantidad">Cantidad</label>
                          <input type="text" class="form-control form-control-sm" style="border-radius: 0;"
                            id="cantidad_{{cont}}" autocomplete="off" onkeypress="return solonumeros(event)">
                          <!--<div id="mensajeErrorCantidad"></div> oninput="val_cantidad()"-->
                          <!--End Input Cantidad-->

                        </div>
                      </div>

                    </div>
                    <div class="col-md-2">
                      <center>
                        <!--Start Btn Agregar-->
                        <i class="fa-solid fa-circle-plus fa-2x" type="button" id="btnAgregarInsumo"
                          onclick="agregarInsumo('{{cont}}');"></i>
                        <!--End Btn Agregar-->
                      </center>
                    </div>
                  </div>
                </div>
              </div>
              <!--End Card-->

              <table class="table">
                <thead style="background-color: #282d32; color:white;">
                  <tr style="text-align: center;">
                    <th>#</th>
                    <th>Insumo</th>
                    <th>Cantidad</th>
                    <th>Funciones</th>
                  </tr>
                </thead>
                <tbody id="listaInsumos_{{cont}}" style="text-align: center;">
                  {{#each this.insumos_r}}
                  <tr id="insumo_{{../cont}}_{{cont_i}}">
                    <td class="p-3 text-center">{{cont_c}}</td>
                    <td class="p-3 text-center">
                      <input name="{{../articulo}}_idInsumo" style="width: 100%; border: none; text-align: center;"
                        value="{{idInsumo}}" readonly>
                    </td>
                    <td class="p-3 text-center">
                      <input onkeypress="return solonumeros(event)" type="text" name="{{../articulo}}_cantidad"
                        style="width: 100%; text-align: center;" id="{{../articulo}}_{{idInsumo}}_cant"
                        value="{{cantidad_n}}" oninput="updateValueInput(this)">
                    </td>
                    <td class="p-3 text-center">
                      <a class="boton-reparacion" type="button"
                        onclick="eliminarInsumo('{{../cont}}_{{cont_i}}', 'listaInsumos_{{../cont}}')"
                        style="color: #292b2c;">
                        <i class="fas fa-trash"></i>
                      </a>
                    </td>
                  </tr>

                  {{/each}}

                </tbody>
              </table>

            </div>
          </div>
        </div>
      </div>

      {{/each}}



    </div>

  </form>

  <br>
  </div>
  </div>

  <!--End Form&Card-->
  <!--Validacion nav bar-->
  {{#if asignacion}}
  <script>
    var permisosInput = document.querySelector('#permisosInput');
    var permisosValue = permisosInput.value;

    var palabras = permisosValue.split(',');

    var menuItems = document.querySelectorAll('.nav li');

    menuItems.forEach(function (item) {
      var items = item.querySelector('p').textContent.trim().toLowerCase();

      if (palabras.includes(items)) {
        item.style.display = 'block';
      } else {
        item.style.display = 'none';
      }
    });
  </script>
  {{/if}}


  <script>
    function tablaIndice() {
      // Obtener la referencia de la tabla
      const tabla = document.getElementById("ListaArticulos");

      // Enumerar las filas
      let filas = tabla.getElementsByClassName("clickable-row");
      for (let i = 0; i < filas.length; i++) {
        let celdaNumero = filas[i].getElementsByTagName("td")[0];
        celdaNumero.textContent = i + 1;
      }
    }
    tablaIndice()
  </script>


  <script>
    var lastValueI = ""; // Variable para almacenar el último valor válido

    function val_articulo() {
      var articulo = document.getElementById("articulo_R");

      if (articulo.value != "") {
        mensajeErrorArticulo.innerHTML = '';
        mensajeErrorArticulo.style.display = 'none';
      }
    }

    function val_descripcion() {
      var descripcion = document.getElementById("descripcion_R");

      if (descripcion.value != "") {
        mensajeErrorDescripcion.innerHTML = '';
        mensajeErrorDescripcion.style.display = 'none';
      }
    }

    function val_observacion() {
      var observacion = document.getElementById("observacion_R");

      if (observacion.value != "") {
        mensajeErrorObservacion.innerHTML = '';
        mensajeErrorObservacion.style.display = 'none';
      }
    }

    function val_f_entrega() {
      var fechaEntrega = document.getElementById("fechaEntrega");

      if (fechaEntrega.value != "") {
        mensajeErrorFechaEntrega.innerHTML = '';
        mensajeErrorFechaEntrega.style.display = 'none';
      }
    }

    function val_total() {
      var total = document.getElementById("total");

      if (total.value != "") {
        mensajeErrorTotal.innerHTML = '';
        mensajeErrorTotal.style.display = 'none';
      }
    }

    /*
        function val_cliente() {
          var cliente = document.getElementById("idCliente");
          var total = document.getElementById("total");
          var fechaEntrega = document.getElementById("fechaEntrega");
          var btn = document.getElementById("btnRegistrar");
    
    
          var selectedOptionI = document.querySelector('#lis_clientes option[value="' + cliente.value + '"]');
    
          if (selectedOptionI) {
            var clienteValue = selectedOptionI.getAttribute('correo');
            cliente.value = selectedOptionI.value; // Establecer el valor del campo "idRegistrador" como el valor de la opción del datalist
            lastValueI = clienteValue; // Actualizar lastValue con el valor del usuario
            //var medidaValue = selectedOptionI.getAttribute('medida');
            //medida.value = medidaValue;
            total.disabled = false;
            fechaEntrega.disabled = false;
            btn.disabled = false;
    
            mensajeErrorCliente.innerHTML = '';
            mensajeErrorCliente.style.display = 'none';
          } else {
            total.disabled = true;
            fechaEntrega.disabled = true;
            btn.disabled = true;
    
            mensajeErrorCliente.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El cliente no es válido';
            mensajeErrorCliente.style.display = 'block';
          }
        }
      */

  </script>

  <!--Agregar y eliminar insumo-->
  <script>
    var cont = 0;
    var contGeneral = 0;
    function agregarArticulo() {
      const articulo = {
        articulo: document.getElementById('articulo_R').value,
        descripcion: document.getElementById('descripcion_R').value,
        observacion: document.getElementById('observacion_R').value,
      };

      if (articulo.articulo != "" && articulo.descripcion != "" && articulo.observacion != "") {
        cont++;
        contGeneral++;
        document.getElementById('ListaArticulos').innerHTML += `

        <tr class="clickable-row" id="${cont}" style="text-align: center; background-color: whitesmoke;">
          <td class="text-center"></td>
          <td class="text-center">
            <input type="hidden" name="articulo_2" id="articulo_2_${cont}" value="${articulo.articulo}">

            <input name="articulo_2_a" value="${articulo.articulo}" oninput="updateValueInput(this)"
              style="border-radius: 0; border: 1px rgb(206, 212, 218) solid;">
          </td>

          <td class="p-3 text-center">
            <select name="estado_2" style="text-align: center; width: 100%;">
              <option value="Iniciado" selected>Iniciado</option>
            </select>
          </td>
          <td class="text-center">
            <a class="expand-button boton-reparacion" type="button">
              <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
              <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
            </a>

            <a class="boton-reparacion" type="button" onclick="eliminarArticulo(${cont})"
              style="color: #292b2c;">
              <i class="fas fa-trash"></i>
            </a>
          </td>
          
        </tr>

        <tr class="extra-row" style="display:none;">
          <td colspan="4">
            <div class="card" style="width: 100%; border-radius: 0;">
              <div class="card-body">
                <div class="row">
                  <div class="col-md-9">

                    <label class="form-label mt-1" for="descripcion_2_${cont}">Descripción</label>
                    <textarea class="form-control form-control-sm"
                      style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;"
                      id="descripcion_2_${cont}" name="descripcion_2" oninput="updateValueTextarea(this)">${articulo.descripcion}</textarea>

                  </div>

                  <div class="col-md-3">
                    <center>
                      <button type="button" class="btn-reparacion btn-sm mt-4" data-toggle="modal"
                        data-target="#insumos_${cont}"
                        style="border-radius: 8px; border: 1px gray solid;">
                        <i class="fa-solid fa-dolly fa-2x"></i><br>
                        <p class="pb-0 mb-0">Agregar<br>Insumos</p>
                      </button>
                    </center>

                  </div>
                </div>

                <div class="row">
                  <div class="col-md-9">

                    <label class="form-label mt-2" for="observacion_${cont}">Observaciones</label>
                    <textarea class="form-control form-control-sm ob mb-2"
                      style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;"
                      id="observacion_2_${cont}" name="observacion_2" oninput="updateValueTextarea(this)">${articulo.observacion}</textarea>
                  </div>
                </div>
              </div>
            </div>
          </td>
        </tr>

        `;

        document.getElementById('modales').innerHTML += `
        <div class="modal fade modalP" id="insumos_${cont}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">Insumos Requeridos Artículo (añadido) #${cont}</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">

                      <!--Start Card-->
                      <div class="card" style="border-radius: 0; width: 100%;">
                        <div class="card-body">
                          <h6 class="card-title">Agregar Inusmo</h6>
                          <div class="row">
                            <div class="col-md-10">

                              <div class="row">
                                <div class="col-md-7">

                                  <!--Input Insumo-->
                              <label class="form-label" for="idInsumo">Insumo</label>
                              <input type="text" class="form-control form-control-sm" list="lis_Insumos" style="border-radius: 0; width: 100%;"
                                id="idInsumo_${cont}" autocomplete="off">
                              <!--<div id="mensajeErrorInsumo"></div> oninput="val_Insumo()"-->
                              <!--End Input Insumo-->

                                </div>

                                <div class="col-md-5">

                          <!--Input Cantidad-->
                              <label class="form-label" for="cantidad">Cantidad</label>
                              <input type="text" class="form-control form-control-sm" style="border-radius: 0;"
                                id="cantidad_${cont}" onkeypress="return solonumeros(event)" autocomplete="off" >
                              <!--<div id="mensajeErrorCantidad"></div> oninput="val_cantidad()"-->
                              <!--End Input Cantidad-->

                                </div>
                              </div>

                              
                    
                            </div>
                            <div class="col-md-2">
                              <center>
                                <!--Start Btn Agregar-->
                                <i class="fa-solid fa-circle-plus fa-2x" type="button" id="btnAgregarInsumo"
                                  onclick="agregarInsumo('${cont}');"></i>
                                <!--End Btn Agregar-->
                              </center>
                            </div>
                          </div>
                        </div>
                      </div>
                      <!--End Card-->

                      <table class="table">
                        <thead style="background-color: #282d32; color:white;">
                          <tr style="text-align: center;">
                            <th>#</th>
                            <th>Insumo</th>
                            <th>Cantidad</th>
                            <th>Funciones</th>
                          </tr>
                        </thead>
                        <tbody id="listaInsumos_${cont}" style="text-align: center;">
                        </tbody>
                      </table>

                    </div>
                </div>
            </div>
        </div>
        `;


        Swal.fire({
          position: 'top-end',
          icon: 'success',
          title: 'Artículo Agregado',
          showConfirmButton: false,
          timer: 1000
        });

        tablaIndice();


        // Ajustar la página actual si es necesario
        /* const visibleRows = document.querySelectorAll('.clickable-row[data-visible="true"]');
         const totalVisibleRows = visibleRows.length;
         const totalPages = Math.ceil(totalVisibleRows / itemsPerPage);
 
         if (currentPage > totalPages) {
           currentPage = totalPages;
         }
 
         showPage(currentPage);
         updatePagination();*/


        const totalVisibleRows = document.querySelectorAll('.clickable-row[data-visible="true"]').length;

        const totalPages = Math.ceil(totalVisibleRows / itemsPerPage);
        currentPage = totalPages;
        showPage(currentPage);
        updatePagination();

        // Configura los Event Listeners para los botones de expansión
        setupExpandButtons();



        /*
                // Después de agregar el evento, actualiza la paginación y muestra la última página
                currentPage = Math.ceil(contGeneral / itemsPerPage);
                showPage(currentPage);
                updatePagination();*/

        // Configura los Event Listeners para los botones de expansión


        document.getElementById('articulo_R').value = null;
        document.getElementById('descripcion_R').value = null;
        document.getElementById('observacion_R').value = null;

        //alert("Insumo Agregado");
      } else {
        //alert("Campos obligatorios");
        Swal.fire({
          position: 'top-end',
          icon: 'warning',
          title: 'Campos Obligatorios',
          showConfirmButton: false,
          timer: 1000
        });

        if (articulo.articulo == "") {
          mensajeErrorArticulo.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El artículo es un campo requerido';
          mensajeErrorArticulo.style.display = 'block';
        }

        if (articulo.descripcion == "") {
          mensajeErrorDescripcion.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La descripción es un campo requerido';
          mensajeErrorDescripcion.style.display = 'block';
        }

        if (articulo.observacion == "") {
          mensajeErrorObservacion.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La observación es un campo requerido';
          mensajeErrorObservacion.style.display = 'block';
        }

      }
    }

    function eliminarArticulo(id) {
      const articulo = document.getElementById(id);
      const idM = "insumos_" + id;
      const modal = document.getElementById(idM);
      if (!articulo || !modal) {
        alert("Error");
      } else {
        const padre = articulo.parentNode;
        const siguienteFila = articulo.nextElementSibling;

        padre.removeChild(articulo);

        if (siguienteFila && siguienteFila.classList.contains("extra-row")) {
          padre.removeChild(siguienteFila);
        }

        const padre2 = modal.parentNode;
        padre2.removeChild(modal);

        contGeneral--;

        // Ajustar la página actual si es necesario
        const visibleRows = document.querySelectorAll('.clickable-row[data-visible="true"]');
        const totalVisibleRows = visibleRows.length;
        const totalPages = Math.ceil(totalVisibleRows / itemsPerPage);

        if (currentPage > totalPages) {
          currentPage = Math.max(1, totalPages); // Asegura que no vaya a una página negativa
        }
        showPage(currentPage);
        updatePagination();

        /*

        // Configura los Event Listeners para los botones de expansión
        setupExpandButtons();

        updatePagination();*/

        Swal.fire({
          position: 'top-end',
          icon: 'success',
          title: 'Artículo Eliminado',
          showConfirmButton: false,
          timer: 1000
        });
      }
    }


    // Agrega los Event Listeners para los botones de expansión después de agregar una nueva fila
    function setupExpandButtons() {
      var expandButtons = document.getElementsByClassName("expand-button");

      for (var i = 0; i < expandButtons.length; i++) {
        expandButtons[i].addEventListener("click", function () {
          var button = this;
          var clickableRow = button.closest(".clickable-row");
          var nextRow = clickableRow.nextElementSibling;

          if (nextRow.classList.contains("extra-row")) {
            nextRow.style.display = nextRow.style.display === "none" ? "table-row" : "none";

            var iconCollapse = button.querySelector(".icon-collapse");
            var iconExpand = button.querySelector(".icon-expand");

            if (nextRow.style.display === "none") {
              iconCollapse.style.display = "block";
              iconExpand.style.display = "none";
            } else {
              iconCollapse.style.display = "none";
              iconExpand.style.display = "block";
            }
          }
        });
      }
    }
    // Configura los Event Listeners para los botones de expansión
    setupExpandButtons();




    var contPar = 0;

    function agregarInsumo(idP) {
      let part = "idInsumo_" + idP;
      let part2 = "cantidad_" + idP;

      let arr;
      if (parseFloat(idP) > 0) {
        arr = "articulo_2_" + idP;
      } else {
        if (parseFloat(idP) < 0) {
          arr = "articulo_1_" + idP;
        }
      }

      let requerido = {
        idInsumo: document.getElementById(part).value,
        cantidad: document.getElementById(part2).value,
        articulo: document.getElementById(arr).value
      };

      if (requerido.idInsumo != "" && requerido.cantidad != "" && requerido.articulo != "") {
        const repetido = document.getElementById(requerido.articulo + '_' + requerido.idInsumo + '_cant');
        let listP = "listaInsumos_" + idP;

        if (repetido != null) {
          //var total = parseInt(repetido.value) + parseInt(requerido.cantidad);
          //repetido.value = total;

          Swal.fire({
            position: 'top-end',
            icon: 'info',
            title: 'El insumo ya está agregado',
            showConfirmButton: false,
            timer: 2000
          });

        } else {

          contPar++;
          let tbTabla = document.getElementById(listP);
          //alert(tbTabla);
          tbTabla.innerHTML += `
         <tr id="insumo_${idP}_${contPar}">
               <td class="p-3 text-center"></td>
               <td class="p-3 text-center">
                   <input name="${requerido.articulo}_idInsumo" style="width: 100%; border: none; text-align: center;" value="${requerido.idInsumo}" readonly>
               </td>
               <td class="p-3 text-center">
                   <input onkeypress="return solonumeros(event)" type="text" name="${requerido.articulo}_cantidad" style="width: 100%; text-align: center;" id="${requerido.articulo}_${requerido.idInsumo}_cant" value="${requerido.cantidad}" oninput="updateValueInput(this)">
               </td>
               <td class="p-3 text-center">
                 <a class="boton-reparacion" type="button" onclick="eliminarInsumo('${idP}_${contPar}', '${listP}')" style="color: #292b2c;">
                   <i class="fas fa-trash"></i>
                 </a>
               </td>
             </tr>
         `;
          Swal.fire({
            position: 'top-end',
            icon: 'success',
            title: 'Insumo Agregado',
            showConfirmButton: false,
            timer: 1000
          });

        }

        //llamar función calcularContTDTable
        ContTr(listP);

        document.getElementById(part).value = "";
        document.getElementById(part2).value = "";

      } else {
        alert('Vacío');
      }
    }



    function eliminarInsumo(idEP, TP) {
      var partE = "insumo_" + idEP;
      const insumoE = document.getElementById(partE);

      if (!insumoE) {
        alert("Error");
      } else {
        const padre = insumoE.parentNode;
        padre.removeChild(insumoE);

        Swal.fire({
          position: 'top-end',
          icon: 'success',
          title: 'Insumo Eliminado',
          showConfirmButton: false,
          timer: 1000
        });

        //llamar función calcularContTDTable
        ContTr(TP);
      }
    }

    //Calcular cont td table
    function ContTr(tbodyId) {
      var tbody = document.getElementById(tbodyId);
      var rows = tbody.getElementsByTagName("tr");
      var contador = 1;

      for (var i = 0; i < rows.length; i++) {
        var td = rows[i].getElementsByTagName("td")[0];
        td.textContent = contador;
        contador++;
      }
    }


  </script>
  <!--End Agregar y eliminar insumo-->

  <!--Rango de fecha-->
  <script>
    /* function capturarFechaActualR() {
       var fechaEntrega = document.getElementById("fechaEntrega");
       var fechaRegistro = document.getElementById("fechaR").value;
       var fechaR = new Date(fechaRegistro);
       var fechaN = new Date();
       //alert(fechaR)
 
       var fechaMinima = new Date(fechaR.getTime() + (1 * 24 * 60 * 60 * 1000)); // 1 día en milisegundos
       var fechaMaxima = new Date(fechaMinima.getTime() + (3 * 30 * 24 * 60 * 60 * 1000)); // 3 meses en milisegundos
 
       var fechaMinimaString = fechaMinima.toISOString().split("T")[0];
       var fechaMaximaString = fechaMaxima.toISOString().split("T")[0];
 
       var fechaNString = fechaN.toISOString().split("T")[0];
 
       fechaEntrega.min = fechaMinimaString;
       fechaEntrega.max = fechaMaximaString;
 
       //alert("Fecha mínima establecida: " + fechaMinimaString);
       //alert("Fecha máxima establecida: " + fechaMaximaString);
     }
     capturarFechaActualR();*/
  </script>
  <!--End Rango de fecha-->

  <!--Validar Envio-->
  <script>

    function validarCampos() {
      // var cliente = document.getElementById("idCliente");
      var total = document.getElementById("total");
      var fechaEntrega = document.getElementById("fechaEntrega");

      /*if (cliente.value == "") {
        mensajeErrorCliente.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El cliente es un campo obligatorio';
        mensajeErrorCliente.style.display = 'block';
      }*/

      if (total.value == "") {
        mensajeErrorTotal.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El total es un campo obligatorio';
        mensajeErrorTotal.style.display = 'block';
      }

      if (fechaEntrega.value == "") {
        mensajeErrorFechaEntrega.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La fecha de entrega es un campo obligatorio';
        mensajeErrorFechaEntrega.style.display = 'block';
      }

    }


    function validarEnvio() {
      var list = document.getElementById('ListaArticulos');
      //var cliente = document.getElementById("idCliente");
      var total = document.getElementById("total");
      var fechaEntrega = document.getElementById("fechaEntrega");

      if (/*cliente.value == "" ||*/total.value == "" || fechaEntrega.value == "") {
        //alert('campos obligatorios');
        Swal.fire({
          position: 'top-end',
          icon: 'warning',
          title: 'Campos Obligatorios',
          showConfirmButton: false,
          timer: 1500
        });
        validarCampos();
        return false; // Detener el envío del formulario
      }

      // Verificar si la lista tiene al menos un elemento
      if (list.childElementCount === 0) {
        //alert("No se puede enviar el formulario porque aún no se ha agregado nungún insumo");
        Swal.fire({
          position: 'top-end',
          icon: 'info',
          title: 'No se puede enviar el formulario porque aún no se ha agregado nungún artículo a reparar',
          showConfirmButton: false,
          timer: 6000
        });
        return false; // Detener el envío del formulario
      }
      // Permite el envío del formulario
      return true;
    }
  </script>
  <!--End Validar Envio-->


  <!--Inicio footer-->

  <!--Fin footer-->
  <!--Bootstrap-->

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    // Inicializar los popovers
    var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
    var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
      return new bootstrap.Popover(popoverTriggerEl);
    });
  </script>


  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
    crossorigin="anonymous"></script>
  <!--   Core JS Files   -->
  <script src="/assets/js/core/jquery.min.js"></script>
  <script src="/assets/js/core/popper.min.js"></script>
  <script src="/assets/js/core/bootstrap.min.js"></script>
  <script src="/assets/js/plugins/perfect-scrollbar.jquery.min.js"></script>

  <!-- Chart JS -->
  <script src="/assets/js/plugins/chartjs.min.js"></script>
  <!--  Notifications Plugin    -->
  <script src="/assets/js/plugins/bootstrap-notify.js"></script>
  <!-- Control Center for Now Ui Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="/assets/js/now-ui-dashboard.min.js?v=1.5.0" type="text/javascript"></script>


  <!--Detalles de los detalles-->
  <script>
    // Desplegar detalle del detalle
    document.addEventListener("DOMContentLoaded", function () {
      var expandButtons = document.getElementsByClassName("expand-button");

      for (var i = 0; i < expandButtons.length; i++) {
        expandButtons[i].addEventListener("click", function () {
          var button = this;
          var clickableRow = button.closest(".clickable-row");
          var nextRow = clickableRow.nextElementSibling;

          if (nextRow.classList.contains("extra-row")) {
            nextRow.style.display = nextRow.style.display === "none" ? "table-row" : "none";

            var iconCollapse = button.querySelector(".icon-collapse");
            var iconExpand = button.querySelector(".icon-expand");

            if (nextRow.style.display === "none") {
              iconCollapse.style.display = "block";
              iconExpand.style.display = "none";
            } else {
              iconCollapse.style.display = "none";
              iconExpand.style.display = "block";
            }
          }
        });
      }
    });

  </script>


  <script>
    const itemsPerPage = 5; // Define el número de registros por página
    let currentPage = 1;

    function showPage(page) {
      const rows = document.querySelectorAll('.clickable-row');
      const startIndex = (page - 1) * itemsPerPage;
      const endIndex = startIndex + itemsPerPage;

      rows.forEach((row, index) => {
        if (index >= startIndex && index < endIndex) {
          row.style.display = 'table-row';
          row.setAttribute('data-visible', 'true');
        } else {
          row.style.display = 'none';
          row.setAttribute('data-visible', 'false');
        }

        // Oculta los elementos <tr> extra
        const extraRow = row.nextElementSibling;
        if (extraRow && extraRow.classList.contains('extra-row')) {
          extraRow.style.display = 'none';
        }
      });
    }

    function updatePagination() {
      const rows = document.querySelectorAll('.clickable-row');
      const totalRows = rows.length;
      const totalPages = Math.ceil(totalRows / itemsPerPage);

      if (currentPage === 1) {
        document.querySelector('.prev-btn').disabled = true;
      } else {
        document.querySelector('.prev-btn').disabled = false;
      }

      if (currentPage === totalPages) {
        document.querySelector('.next-btn').disabled = true;
      } else {
        document.querySelector('.next-btn').disabled = false;
      }
    }

    document.querySelector('.prev-btn').addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        showPage(currentPage);
        updatePagination();
      }
    });

    document.querySelector('.next-btn').addEventListener('click', () => {
      const rows = document.querySelectorAll('.clickable-row');
      const totalRows = rows.length;
      const totalPages = Math.ceil(totalRows / itemsPerPage);

      if (currentPage < totalPages) {
        currentPage++;
        showPage(currentPage);
        updatePagination();
      }
    });

    // Mostrar la primera página al cargar la tabla
    showPage(currentPage);
    updatePagination();

    // Configura los Event Listeners iniciales para los botones de expansión
    setupExpandButtons();

  </script>

  <!--End Detalles de los detalles-->




  <script>
    function solonumeros(e) {
      key = e.keyCode || e.which;

      teclado = String.fromCharCode(key);

      letras = "1234567890";

      especiales = "8-37-38-46";

      teclado_especial = false;

      for (var i in especiales) {
        if (key == especiales[i]) {
          teclado_especial = true; break
        }
      }

      if (letras.indexOf(teclado) == -1 && !teclado_especial) {
        return false;
      }

    }

    function solonumeros2(e) {
      key = e.keyCode || e.which;

      teclado = String.fromCharCode(key);

      letras = "1234567890-";

      especiales = "8-37-38-46";

      teclado_especial = false;

      for (var i in especiales) {
        if (key == especiales[i]) {
          teclado_especial = true; break
        }
      }

      if (letras.indexOf(teclado) == -1 && !teclado_especial) {
        return false;
      }

    }


    /*
    function puntos(valor){
      return(valor.toLocaleString('es-CO');)
    }*/

  </script>




  <script>
    //Actualizar valor
    function updateValueInput(input) {
      input.setAttribute("value", input.value);
    }

    function updateValueTextarea(textarea) {
      textarea.textContent = textarea.value;
    }

    function updateValueSelect(select) {
      var selectedOption = select.options[select.selectedIndex];

      // Remover el atributo "selected" de todas las opciones
      for (var i = 0; i < select.options.length; i++) {
        select.options[i].removeAttribute("selected");
      }

      // Agregar el atributo "selected" a la opción seleccionada
      selectedOption.setAttribute("selected", "selected");
    }
  </script>