<!DOCTYPE html>
<html lang="es">
{{>headerId}}
<body>
  <style>
    .fa-circle-plus:hover {
      color: gray;
    }

    .fa-trash:hover {
      color: red;
    }

    .btn-participantes:hover,
    .btn-s:hover,
    .icon-collapse:hover {
      color: gray;
    }

    #descripcion_R,
    #observacion_R {
      border-radius: 0;
      border: 1px rgb(206, 212, 218) solid;
      line-height: 1.5;
      max-height: 200px;
      padding-top: 0;
      height: 60px;
    }

    .btn {
      border-radius: 8px;
    }

    #mensajeErrorEncargado,
    #mensajeErrorProducto,
    #mensajeErrorCantidad,
    #mensajeErrorFechaInicio,
    #mensajeErrorFechaFin,
    #mensajeErrorParticipante {
      display: none;
      color: red;
      margin-top: 5px;
    }

    #mensajeErrorEncargado .icono,
    #mensajeErrorProducto .icono,
    #mensajeErrorCantidad .icono,
    #mensajeErrorFechaInicio .icono,
    #mensajeErrorFechaFin .icono,
    #mensajeErrorParticipante {
      display: inline-block;
      vertical-align: middle;
      margin-right: 5px;
      width: 15px;
      height: 15px;
    }

    #mensajeErrorTitulo,
    #mensajeErrorDescripcion,
    #mensajeErrorObservacion,
    #mensajeErrorFechaInicioD,
    #mensajeErrorFechaFinD {
      display: none;
      color: red;
      margin-top: 5px;
    }

    #mensajeErrorTitulo .icono,
    #mensajeErrorDescripcion .icono,
    #mensajeErrorObservacion .icono,
    #mensajeErrorFechaInicioD .icono,
    #mensajeErrorFechaFinD .icono {
      display: inline-block;
      vertical-align: middle;
      margin-right: 5px;
      width: 15px;
      height: 15px;
    }

    .fa-pen:hover {
      color: #0275d8;
    }

    .fa-trash:hover {
      color: red;
    }

    .boton-produccion {
      display: inline-block;
      vertical-align: middle;
      margin-right: 10px;
    }

    /* Add this style to your existing CSS */
    .table-container {
      max-height: 400px;
      height: auto;
      /* Adjust this value as per your requirement */
      overflow-y: auto;
      position: relative;
      /* Add this to enable positioning of thead */
    }

    /* Add this style to fix thead */
    .table-container table {
      position: relative;
    }

    .table-container thead {
      position: sticky;
      top: 0;
      z-index: 1;
    }
  </style>

  <!--Barra de navegación-->
  {{> barId}}
  <!--Barra de navegación-->

  {{#each produccion}}
  <form action="/produccion_editar/{{idOrdenProduccion}}" method="post" onsubmit="return validarEnvio()"
    id="FormEditarProduccion">
    <!--Start Card&Form-->
    <div class="card" style="width: 98%; border-radius: 0; margin-left:1%; margin-top: 60px;">
      <div class="card-body">
        <h4 class="card-title" style="margin-bottom: 1%;">Editar orden de producción</h4>

        <div class="row">
          <div class="col-3">

            <!--Start Card #1-->
            <div class="card" style="border-radius: 0; width: 100%; margin-bottom: 3%;">
              <div class="card-body">
                <h5 class="card-title" style="margin-bottom: 2%;">Producción</h5>

                <!--Input Encargado-->
                <label class="form-label" for="idEncargado">Encargado</label>
                <input type="text" class="form-control form-control-sm" style="border-radius: 0;" id="idEncargado"
                  name="idEncargado" autocomplete="off" value="{{idInfo}}" readonly>

                <!--
                  list="lis_encargados"
                  oninput="val_encargado()"

                  <datalist id="lis_encargados">
                  {{#each usuarios}}
                  <option value="{{correo}}">Nombre({{nombre}}) Teléfono({{telefono}}) Correo({{correo}})</option>
                  {{/each}}
                </datalist>-->
                <div id="mensajeErrorEncargado"></div>
                <!--End Input Encargado-->

                <!--Input Producto-->
                <label class="form-label mt-2" for="idProducto">Producto {{#if estado1}}<small
                    style="color: red;">*</small>{{/if}}</label>
                <input type="text" class="form-control form-control-sm" list="lis_productos" style="border-radius: 0;"
                  id="idProducto" name="idProducto" autocomplete="off" oninput="val_producto()" value="{{idProducto}}"
                  {{#if estado2}} readonly {{/if}}>
                <datalist id="lis_productos">
                  {{#each ../productos}}
                  <option value="{{nombre}}" style="color: black;">
                    <div class="row">
                      <div class="col-md-3">
                        <img src="/assets/img/Productos/{{imagen}}" alt="Imagen del producto"
                          style="max-width:40px; max-height:40px, display: inline-block;">
                      </div>
                      <div class="col-md-9">
                        <p>Nombre({{nombre}}) Categoría({{categoria}}) Stock({{stock}})</p>
                      </div>
                    </div>

                  </option>
                  {{/each}}
                </datalist>
                <div id="mensajeErrorProducto"></div>
                <!--End Input Producto-->

                <!--Input Cantidad-->
                <label class="form-label mt-2" for="cantidad">Cantidad Producir <small
                    style="color: red;">*</small></label>
                <input type="number" class="form-control form-control-sm" style="border-radius: 0;" id="cantidad"
                  name="cantidad" oninput="val_cantidad();" onkeypress="return solonumeros(event)" autocomplete="off"
                  value="{{cantidad}}" min="50" max="99999999">
                <div id="mensajeErrorCantidad"></div>
                <!--End Input Cantidad-->

                <!--Input Fecha Inicio-->
                <label class="form-label mt-2" for="fechaInicio">Fecha Inicio <small
                    style="color: red;">*</small></label>
                <input type="date" class="form-control form-control-sm" style="border-radius: 0;" id="fechaInicio"
                  name="fechaInicio" oninput="val_f_inicio(); updateFechaFinMin2();" autocomplete="off"
                  value="{{fechaInicio}}">
                <div id="mensajeErrorFechaInicio"></div>
                <!--End Input Fecha Inicio-->

                <!--Input Fecha Fin-->
                <label class="form-label mt-2" for="fechaFin">Fecha Fin <small style="color: red;">*</small></label>
                <input type="date" class="form-control form-control-sm mb-2" style="border-radius: 0;" id="fechaFin"
                  name="fechaFin" oninput="val_f_fin()" autocomplete="off" value="{{fechaFin}}">
                <div id="mensajeErrorFechaFin"></div>
                <!--End Input Fecha Fin-->

                <script>
                  function updateFechaFinMin2() {
                    const fechaInicioInput = document.getElementById('fechaInicio');
                    const fechaFinInput = document.getElementById('fechaFin');

                    fechaFinInput.min = fechaInicioInput.value;

                    if (fechaInicioInput.value == '' || fechaInicioInput.value == null) {
                      fechaFinInput.disabled = true;
                    } else {
                      fechaFinInput.disabled = false;
                    }
                  }

                </script>
              </div>
            </div>
            <!--End Card #1-->
            {{/each}}
          </div>
          <div class="col-9">

            <!--Start Card #2-->
            <div class="card mb-3" style="border-radius: 0; width: 100%;">
              <div class="card-body">
                <h5 class="card-title">Agregar tarea</h5>
                <div class="row">
                  <div class="col-md-4">

                    <!--Input Titulo-->
                    <label class="form-label" for="titulo_R">Titulo</label>
                    <input type="text" class="form-control form-control-sm" style="border-radius: 0;" id="titulo_R"
                      autocomplete="off" oninput="val_titulo()" onkeypress="return solomotivo(event)">
                    <div id="mensajeErrorTitulo"></div>
                    <!--End Input Titulo-->

                  </div>
                  <div class="col-md-4">

                    <!--Input Fecha Inicio-->
                    <label class="form-label" for="fechaInicio_R">Fecha Inicio</label>
                    <input type="date" class="form-control form-control-sm" style="border-radius: 0;" id="fechaInicio_R"
                      oninput="val_f_inicio_d(); updateFechaFinMin()" autocomplete="off" >
                    <div id="mensajeErrorFechaInicioD"></div>
                    <!--End Input Fecha Inicio-->

                  </div>
                  <div class="col-md-4">

                    <!--Input Fecha Fin-->
                    <label class="form-label mt-2" for="fechaFin_R">Fecha Fin</label>
                    <input type="date" class="form-control form-control-sm" style="border-radius: 0;" id="fechaFin_R"
                      oninput="val_f_fin_d()" autocomplete="off" disabled>
                    <div id="mensajeErrorFechaFinD"></div>
                    <!--End Input Fecha Fin-->

                  </div>

                  <script>
                    function updateFechaFinMin() {
                      const fechaInicioInput = document.getElementById('fechaInicio_R');
                      const fechaFinInput = document.getElementById('fechaFin_R');

                      fechaFinInput.min = fechaInicioInput.value;

                      if (fechaInicioInput.value == '' || fechaInicioInput.value == null) {
                        fechaFinInput.disabled = true;
                      } else {
                        fechaFinInput.disabled = false;
                      }
                    }

                  </script>

                </div>
                <div class="row">
                  <div class="col-md-5">

                    <!--Input Descripción-->
                    <label class="form-label" for="descripcion_R">Descripción</label>
                    <textarea class="form-control form-control-sm mb-2" style="border-radius: 0;" id="descripcion_R"
                      autocomplete="off" oninput="val_descripcion()" onkeypress="return solomotivo(event)"></textarea>
                    <div id="mensajeErrorDescripcion"></div>
                    <!--End Input Descripción-->

                  </div>
                  <div class="col-md-5">

                    <!--Input Observación-->
                    <label class="form-label" for="observacion_R">Observaciones</label>
                    <textarea class="form-control form-control-sm" style="border-radius: 0;" id="observacion_R"
                      autocomplete="off" oninput="val_observacion()" onkeypress="return solomotivo(event)"></textarea>
                    <div id="mensajeErrorObservacion"></div>
                    <!--End Input Observación-->

                  </div>

                  <div class="col-md-2">
                    <center>
                      <!--Start Btn Agregar-->
                      <i class="fa-solid fa-circle-plus fa-2x mt-4" type="button" id="btnAgregarTarea"
                        onclick="agregarTarea();"></i>
                      <!--End Btn Agregar-->
                    </center>

                  </div>
                </div>
              </div>
            </div>
            <!--End Card #2-->

            <!--Start Card #3-->
            <div class="card" style="width: 100%; max-width: 100%; border-radius: 0;">
              <div class="card-body">
                <h5 class="card-title">Tareas</h5>
                <!--Start Table-->
                <div class="table-container">
                  <table class="table table-sm">
                    <thead class="table" style="background-color: #282d32; color:white;">
                      <tr style="text-align: center;">
                        <th>#</th>
                        <th> Titulo</th>
                        <th> FechaInicio</th>
                        <th> FechaFin</th>
                        <th> Estado </th>
                        <th> Funciones </th>
                      </tr>
                    </thead>
                    <tbody id="ListaTareas">
                      {{#each d_produccion}}
                      <tr class="clickable-row" id="{{cont}}">
                        <td class="p-3 text-center">{{contMas}}</td>
                        <td class="p-3 text-center">
                          <input type="hidden" name="idDetalleOrdenProduccion_1" value="{{idDetalleOrdenProduccion}}">
                          <input type="hidden" name="titulo_1" id="titulo_1_{{cont}}" value="{{titulo}}">
                          <input class="form-control form-control-sm" name="titulo_1_a" id="titulo_1_a_{{cont}}"
                            oninput="updateValueInput(this)" value="{{titulo}}"
                            style="border-radius: 0; border: 1px rgb(206, 212, 218) solid;">
                        </td>
                        <td class="p-3 text-center">
                          <input class="form-control form-control-sm" type="date" name="fechaInicio_detalle_1"
                            id="fechaInicio_1_{{cont}}" value="{{fechaInicio}}" oninput="updateValueInput(this)"
                            style="border-radius: 0;">
                        </td>
                        <td class="p-3 text-center">
                          <input class="form-control form-control-sm" type="date" name="fechaFin_detalle_1"
                            id="fechaFin_1_{{cont}}" value="{{fechaFin}}" style="border-radius: 0;"
                            oninput="updateValueInput(this)">
                        </td>

                        {{#if estado1}}
                        <td class="p-3 text-center">
                          <select class="form-control form-control-sm" name="estado_1"
                            style="text-align: center; border-radius: 0;" onchange="updateValueSelect(this)">
                            <option value="{{estado}}" selected>{{estado}}</option>
                            <option value="Proceso">En Proceso</option>
                            <option value="Terminado">Terminado</option>
                          </select>
                        </td>

                        <td class="text-center">
                          <a class="expand-button boton-produccion" type="button">
                            <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
                            <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
                          </a>

                          <a class="boton-produccion" type="button" onclick="eliminarTarea({{cont}})"
                            style="color: #292b2c;">
                            <i class="fas fa-trash"></i>
                          </a>
                        </td>
                        {{/if}}
                        {{#if estado2}}
                        <td class="p-3 text-center">
                          <select class="form-control form-control-sm" name="estado_1"
                            style="text-align: center; border-radius: 0;" onchange="updateValueSelect(this)">
                            <option value="{{estado}}" selected>En {{estado}}</option>
                            <option value="Terminado">Terminado</option>
                          </select>
                        </td>
                        <td class="text-center">
                          <a class="expand-button boton-produccion" type="button">
                            <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
                            <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
                          </a>
                          <!-- <a class="boton-produccion" type="button" onclick="eliminarTarea({{cont}})"
                            style="color: #292b2c;">
                            <i class="fas fa-trash"></i>
                          </a>-->
                        </td>

                        {{/if}}
                        {{#if estado3}}
                        <td class="p-3 text-center">
                          <select class="form-control form-control-sm" name="estado_1"
                            style="text-align: center; border-radius: 0;" onchange="updateValueSelect(this)">
                            <option value="{{estado}}" selected>{{estado}}</option>
                            <option value="Proceso">En Proceso</option>
                          </select>
                        </td>

                        <td class="text-center">
                          <a class="expand-button boton-produccion" type="button">
                            <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
                            <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
                          </a>
                        </td>
                        {{/if}}
                      </tr>

                      <tr class="extra-row" style="display:none;">
                        <td colspan="6">
                          <div class="card" style="width: 100%; border-radius: 0;">
                            <div class="card-body">
                              <div class="row">
                                <div class="col-md-9">

                                  <label class="form-label mt-1" for="descripcion_1_{{cont}}">Descripción</label>
                                  <textarea class="form-control form-control-sm des"
                                    style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;"
                                    id="descripcion_1_{{cont}}" name="descripcion_1"
                                    oninput="updateValueTextarea(this)"> {{descripcion}}</textarea>

                                </div>

                                <div class="col-md-3">
                                  <center>
                                    <button type="button" class="btn-participantes btn-sm mt-4" data-toggle="modal"
                                      data-target="#participantes_{{cont}}"
                                      style="border-radius: 8px; border: 1px gray solid;">
                                      <i class="fa-solid fa-user-plus fa-2x"></i><br>
                                      <p class="pb-0 mb-0">Agregar<br>Participantes</p>
                                    </button>
                                  </center>

                                </div>
                              </div>

                              <div class="row">
                                <div class="col-md-9">

                                  <label class="form-label mt-2" for="observacion_1_{{cont}}">Observaciones</label>
                                  <textarea class="form-control form-control-sm ob mb-2"
                                    style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;"
                                    id="observacion_1_{{cont}}" name="observacion_1"
                                    oninput="updateValueTextarea(this)">{{observacion}}</textarea>

                                </div>
                              </div>
                            </div>
                          </div>
                        </td>
                      </tr>

                      {{/each}}
                    </tbody>
                  </table>
                </div>
                <!--End Table-->
                <div class="row">
                  <div class="col-md-5"></div>
                  <div class="col-md-2">
                    <div class="pagination">
                      <button type="button" class="btn btn-outline-secondary btn-sm prev-btn mt-1"><i
                          class="fa-solid fa-arrow-left"></i></button>
                      <button type="button" class="btn btn-outline-secondary btn-sm next-btn mt-1 ml-1"><i
                          class="fa-solid fa-arrow-right"></i></button>
                    </div>
                  </div>
                  <div class="col-md-5"></div>
                </div>
              </div>
            </div>

            <!--End Card #3-->


            <div style="text-align: right;">
              <!--Start Btn Cancelar-->
              <a class="btn btn-danger btn-sm" href="/produccion" style="margin-top: 1px;" type="button">Cancelar</a>
              <!--End Btn Cancelar-->

              <!--Start Btn Registrar-->
              <button id="btnRegistrar" type="submit" class="btn btn-success btn-sm" style="margin-bottom: 1px;">
                Guardar Cambios</button>
              <!--End Btn Regiastrar-->
            </div>

          </div>
        </div>
      </div>
    </div>
    <!--End Card&Form-->

    <div id="modales">
      <datalist id="lis_Participantes">
        {{#each usersA}}
        <option value="{{correo}}">Nombre({{nombre}}) Apellido({{Apellido}}) Teléfono({{telefono}}) Correo({{correo}})</option>
        {{/each}}
      </datalist>

      {{#each d_produccion}}
      <div class="modal fade modalP" id="participantes_{{cont}}" tabindex="-1" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h4 class="modal-title" id="exampleModalLabel">Participantes tarea #{{contMas}}</h4>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">

              <!--Start Card-->
              <div class="card" style="border-radius: 0; width: 100%;">
                <div class="card-body">
                  <h5 class="card-title">Agregar participante</h5>
                  <div class="row">
                    <div class="col-md-10">

                      <!--Input Participante-->
                      <label class="form-label" for="idParticipante_{{cont}}">Participante</label>
                      <input type="text" class="form-control form-control-sm" list="lis_Participantes"
                        style="border-radius: 0;" id="idParticipante_{{cont}}" autocomplete="off">
                      <!--<div id="mensajeErrorParticipante"></div> oninput="val_participante()"-->
                      <!--End Input Participante-->

                    </div>
                    <div class="col-md-2">
                      <center>
                        <!--Start Btn Agregar-->
                        <i class="fa-solid fa-circle-plus fa-2x" type="button" id="btnAgregarParticipante"
                          onclick="agregarParticipante({{cont}});"></i>
                        <!--End Btn Agregar-->
                      </center>
                    </div>
                  </div>
                </div>
              </div>
              <!--End Card-->

              <table class="table">
                <thead style="background-color: #282d32; color:white;">
                  <tr style="text-align: center;">
                    <th>#</th>
                    <th>Participante</th>
                    <th>Funciones</th>
                  </tr>
                </thead>
                <tbody class="TablaParticipantes" contador="{{contMas}}" id="listaParticipantes_{{cont}}"
                  style="text-align: center;">
                  {{#each this.participes}}
                  <tr id="participante_{{../cont}}_{{cont_i}}">
                    <td class="p-3 text-center">{{cont_c}}</td>
                    <td class="p-3 text-center">
                      <input name="{{../titulo}}_idParticipante" style="width: 100%; border: none; text-align: center;"
                        id="{{../titulo}}_{{idInfo}}" value="{{idInfo}}" readonly>
                    </td>
                    <td class="p-3 text-center">
                      <a class="boton-produccion" type="button"
                        onclick="eliminarParticipante('{{../cont}}_{{cont_i}}', 'listaParticipantes_{{../cont}}')"
                        style="color: #292b2c;">
                        <i class="fas fa-trash"></i>
                      </a>
                    </td>
                  </tr>
                  {{/each}}
                </tbody>
              </table>

            </div>
          </div>
        </div>
      </div>
      {{/each}}
    </div>

  </form>
  <!--End Form&Card-->

  <br>
 </div>
  </div>

  <!--End Form&Card-->
  <!--Validacion nav bar-->
  {{#if asignacion}}
  <script>
    var permisosInput = document.querySelector('#permisosInput');
    var permisosValue = permisosInput.value;

    var palabras = permisosValue.split(',');

    var menuItems = document.querySelectorAll('.nav li');

    menuItems.forEach(function (item) {
      var items = item.querySelector('p').textContent.trim().toLowerCase();

      if (palabras.includes(items)) {
        item.style.display = 'block';
      } else {
        item.style.display = 'none';
      }
    });
  </script>
  {{/if}}



  <!--Mensajes Error-->
  <script>
    var lastValueI = ""; // Variable para almacenar el último valor válido

    function val_titulo() {
      var titulo = document.getElementById("titulo_R");

      if (titulo.value != "") {
        mensajeErrorTitulo.innerHTML = '';
        mensajeErrorTitulo.style.display = 'none';
      }
    }

    function val_descripcion() {
      var descripcion = document.getElementById("descripcion_R");

      if (descripcion.value != "") {
        mensajeErrorDescripcion.innerHTML = '';
        mensajeErrorDescripcion.style.display = 'none';
      }
    }

    function val_observacion() {
      var observacion = document.getElementById("observacion_R");

      if (observacion.value != "") {
        mensajeErrorObservacion.innerHTML = '';
        mensajeErrorObservacion.style.display = 'none';
      }
    }

    function val_f_inicio_d() {
      var fechaInicioD = document.getElementById("fechaInicio_R");

      if (fechaInicioD.value != "") {
        mensajeErrorFechaInicioD.innerHTML = '';
        mensajeErrorFechaInicioD.style.display = 'none';
      }
    }

    function val_f_fin_d() {
      var fechaFinD = document.getElementById("fechaFin_R");

      if (fechaFinD.value != "") {
        mensajeErrorFechaFinD.innerHTML = '';
        mensajeErrorFechaFinD.style.display = 'none';
      }
    }

    lastValueE = "";
    function val_encargado() {
      var producto = document.getElementById("idProducto");
      var encargado = document.getElementById("idEncargado");
      var cantidad = document.getElementById("cantidad");
      var fechaInicio = document.getElementById("fechaInicio");
      var btn = document.getElementById("btnRegistrar");

      var selectedOptionE = document.querySelector('#lis_encargados option[value="' + encargado.value + '"]');

      if (selectedOptionE) {
        var encargadoValue = selectedOptionE.getAttribute('nombre');
        encargado.value = selectedOptionE.value; // Establecer el valor del campo "idRegistrador" como el valor de la opción del datalist
        lastValueE = encargadoValue; // Actualizar lastValue con el valor del usuario

        producto.disabled = false;
        cantidad.disabled = false;
        fechaInicio.disabled = false;
        btn.disabled = false;

        mensajeErrorEncargado.innerHTML = '';
        mensajeErrorEncargado.style.display = 'none';
      } else {
        producto.disabled = true;
        cantidad.disabled = true;
        fechaInicio.disabled = true;
        btn.disabled = true;

        mensajeErrorEncargado.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El usuario no es válido';
        mensajeErrorEncargado.style.display = 'block';
      }
    }

    lastValuePart = "";
    function val_participante(idEvento) {
      var participante = document.getElementById("idParticipante");
      var btn_part = "btnAgregarParticipante" + idEvento;
      var btn = document.getElementById(btn_part);

      var selectedOptionPart = document.querySelector('#lis_encargados option[value="' + participante.value + '"]');

      if (selectedOptionPart) {
        var participanteValue = selectedOptionPart.getAttribute('nombre');
        participante.value = selectedOptionPart.value; // Establecer el valor del campo "idRegistrador" como el valor de la opción del datalist
        lastValuePart = participanteValue; // Actualizar lastValue con el valor del usuario
        btn.disabled = false;

        mensajeErrorParticipante.innerHTML = '';
        mensajeErrorParticipante.style.display = 'none';
      } else {
        btn.disabled = true;

        mensajeErrorParticipante.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El usuario no es válido';
        mensajeErrorParticipante.style.display = 'block';
      }
    }

    lastValueP = "";
    function val_producto() {
      var producto = document.getElementById("idProducto");
      var encargado = document.getElementById("idEncargado");
      var cantidad = document.getElementById("cantidad");
      var fechaInicio = document.getElementById("fechaInicio");
      var btn = document.getElementById("btnRegistrar");

      var selectedOptionP = document.querySelector('#lis_productos option[value="' + producto.value + '"]');

      if (selectedOptionP) {
        var productoValue = selectedOptionP.getAttribute('nombre');
        producto.value = selectedOptionP.value; // Establecer el valor del campo "idRegistrador" como el valor de la opción del datalist
        lastValueP = productoValue; // Actualizar lastValue con el valor del usuario

        encargado.disabled = false;
        cantidad.disabled = false;
        fechaInicio.disabled = false;
        btn.disabled = false;

        mensajeErrorProducto.innerHTML = '';
        mensajeErrorProducto.style.display = 'none';
      } else {
        encargado.disabled = true;
        cantidad.disabled = true;
        fechaInicio.disabled = true;
        btn.disabled = true;

        mensajeErrorProducto.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El producto no es válido';
        mensajeErrorProducto.style.display = 'block';
      }
    }

    function val_cantidad() {
      var cantidad = document.getElementById("cantidad");

      if (cantidad.value != "") {
        mensajeErrorCantidad.innerHTML = '';
        mensajeErrorCantidad.style.display = 'none';
      }
    }

    function val_f_inicio() {
      var fechaInicio = document.getElementById("fechaInicio");

      if (fechaInicio.value != "") {
        mensajeErrorFechaInicio.innerHTML = '';
        mensajeErrorFechaInicio.style.display = 'none';
      }
    }

    function val_f_fin() {
      var fechaFin = document.getElementById("fechaFin");

      if (fechaFin.value != "") {
        mensajeErrorFechaFin.innerHTML = '';
        mensajeErrorFechaFin.style.display = 'none';
      }
    }
  </script>
  <!--Mensajes Error-->



  <!--Agregar, Eliminar Tareas y Partícipes-->
  <script>
    //Contadores
    var cont = {{{ toJson contDetalle }}};
    var contGeneral = 0;
    var contPar = 0;

    //Tareas
    function agregarTarea() {
      const tarea = {
        titulo: document.getElementById('titulo_R').value,
        descripcion: document.getElementById('descripcion_R').value,
        observacion: document.getElementById('observacion_R').value,
        fechaInicio: document.getElementById('fechaInicio_R').value,
        fechaFin: document.getElementById('fechaFin_R').value
      };

      if (tarea.titulo != "" && tarea.descripcion != "" && tarea.observacion != "" && tarea.fechaInicio != "" && tarea.fechaFin != "") {
        cont++;
        contGeneral++;
        document.getElementById('ListaTareas').innerHTML += `
            <tr class="clickable-row" id="${cont}">
              <td class="p-3 text-center">${cont}</td>
              <td class="p-3 text-center">
                  <input type="hidden" name="titulo_2" id="titulo_2_${cont}" value="${tarea.titulo}">
                  <input  class="form-control form-control-sm" name="titulo_2_a" id="titulo_2_a_${cont}" oninput="updateValueInput(this)" value="${tarea.titulo}" style="border-radius: 0; border: 1px rgb(206, 212, 218) solid;">
              </td>
              <td class="p-3 text-center">
                  <input  class="form-control form-control-sm" type="date" name="fechaInicio_detalle_2" id="fechaInicio_2_${cont}" value="${tarea.fechaInicio}" oninput="updateValueInput(this)" style="border-radius: 0;">
              </td>
              <td class="p-3 text-center">
                  <input  class="form-control form-control-sm" type="date" name="fechaFin_detalle_2" id="fechaFin_2_${cont}" value="${tarea.fechaFin}" oninput="updateValueInput(this)" style="border-radius: 0;">
              </td>
              <td class="p-3 text-center">
                <select name="estado_2" style="text-align: center; border-radius: 0;" class="form-control form-control-sm">
                  <option value="Iniciado" selected>Iniciado</option>
                </select>
              </td>
              <td class="p-3 text-center">
                <a class="expand-button boton-produccion" type="button">
                  <i class="fa-solid fa-caret-down icon-collapse fa-2x"></i>
                  <i class="fa-solid fa-caret-up icon-expand fa-2x" style="display: none; color:gray;"></i>
                </a>

                <a class="boton-produccion" type="button" onclick="eliminarTarea(${cont})" style="color: #292b2c;">
                  <i class="fas fa-trash"></i>
                </a>
              </td>
            </tr>

            <tr class="extra-row" style="display:none;">
              <td colspan="6">
                <div class="card" style="width: 100%; border-radius: 0;">
                  <div class="card-body">
                    <div class="row">
                      <div class="col-md-9">
                                
                        <label class="form-label mt-1" for="descripcion_2_${cont}">Descripción</label>
                        <textarea class="form-control form-control-sm des" style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;" 
                          id="descripcion_2_${cont}" name="descripcion_2" oninput="updateValueTextarea(this)"> ${tarea.descripcion}</textarea>
                                
                      </div>

                      <div class="col-md-3">
                        <center>
                          <button type="button" class="btn-participantes btn-sm mt-4"
                              data-toggle="modal" data-target="#participantes_${cont}" style="border-radius: 8px; border: 1px gray solid;">
                            <i class="fa-solid fa-user-plus fa-2x"></i><br>
                            <p class="pb-0 mb-0">Agregar<br>Participantes</p>
                          </button>
                        </center>

                      </div>
                    </div>

                    <div class="row">
                      <div class="col-md-9">
                                
                        <label class="form-label mt-2" for="observacion_2_${cont}">Observaciones</label>
                          <textarea class="form-control form-control-sm ob mb-2"
                            style="border-radius: 0; border: 1px rgb(206, 212, 218) solid; line-height: 1.5; max-height: 200px; padding-top: 0; height: 60px;" id="observacion_2_${cont}"
                            name="observacion_2" oninput="updateValueTextarea(this)">${tarea.observacion}</textarea>
                                
                      </div>
                    </div>
                  </div>
                </div>
            </td>
          </tr>            
        `;

        document.getElementById('modales').innerHTML += `
        <!--Modal Participantes-->
        <div class="modal fade modalP" id="participantes_${cont}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                      <h4 class="modal-title" id="exampleModalLabel">Participantes tarea #...</h4>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">

                      <!--Start Card-->
                      <div class="card" style="border-radius: 0; width: 100%;">
                        <div class="card-body">
                          <h5 class="card-title">Agregar participante</h5>
                          <div class="row">
                            <div class="col-md-10">

                              <!--Input Participante-->
                              <label class="form-label" for="idParticipante">Participante</label>
                              <input type="text" class="form-control form-control-sm" list="lis_Participantes" style="border-radius: 0;"
                                id="idParticipante_${cont}" autocomplete="off" >
                             <!-- <datalist id="lis_Participantes">
                                {{#each usuarios}}
                                <option value="{{correo}}">Nombre({{nombre}}) Teléfono({{telefono}}) Correo({{correo}})</option>
                                {{/each}}
                              </datalist>
                              <div id="mensajeErrorParticipante"></div> oninput="val_participante()"-->
                              <!--End Input Participante-->
                    
                            </div>
                            <div class="col-md-2">
                              <center>
                                <!--Start Btn Agregar-->
                                <i class="fa-solid fa-circle-plus fa-2x" type="button" id="btnAgregarParticipante"
                                  onclick="agregarParticipante(${cont});"></i>
                                <!--End Btn Agregar-->
                              </center>
                            </div>
                          </div>
                        </div>
                      </div>
                      <!--End Card-->

                      <table class="table">
                        <thead style="background-color: #282d32; color:white;">
                          <tr style="text-align: center;">
                            <th>#</th>
                            <th>Participante</th>
                            <th>Funciones</th>
                          </tr>
                        </thead>
                        <tbody class="TablaParticipantes" contador="${cont}" id="listaParticipantes_${cont}" style="text-align: center;">
                        </tbody>
                      </table>

                    </div>
                </div>
            </div>
        </div>
        <!--End Modal-->
        `;

        document.getElementById('fechaFin_R').disabled = true;

        Swal.fire({
          position: 'top-end',
          icon: 'success',
          title: 'Tarea Agregada',
          showConfirmButton: false,
          timer: 1000
        });

        //tablaIndice();

        const totalVisibleRows = document.querySelectorAll('.clickable-row[data-visible="true"]').length;
        const totalPages = Math.ceil(totalVisibleRows / itemsPerPage);
        currentPage = totalPages;
        showPage(currentPage);
        updatePagination();

        // Configura los Event Listeners para los botones de expansión
        setupExpandButtons();


        document.getElementById('titulo_R').value = null;
        document.getElementById('descripcion_R').value = null;
        document.getElementById('observacion_R').value = null;
        document.getElementById('fechaInicio_R').value = null;
        document.getElementById('fechaFin_R').value = null;


        //alert(" Agregado");
      } else {
        //alert("Campos obligatorios");
        /*Swal.fire({
          position: 'top-end',
          icon: 'warning',
          title: 'Campos Obligatorios',
          showConfirmButton: false,
          timer: 1000
        });*/

        if (tarea.titulo == "") {
          mensajeErrorTitulo.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El artículo es un campo requerido';
          mensajeErrorTitulo.style.display = 'block';
        }

        if (tarea.descripcion == "") {
          mensajeErrorDescripcion.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La descripción es un campo requerido';
          mensajeErrorDescripcion.style.display = 'block';
        }

        if (tarea.observacion == "") {
          mensajeErrorObservacion.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La observación es un campo requerido';
          mensajeErrorObservacion.style.display = 'block';
        }

        if (tarea.fechaInicio == "") {
          mensajeErrorFechaInicioD.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La fecha estimada de inicio es un campo requerido';
          mensajeErrorFechaInicioD.style.display = 'block';
        }

        if (tarea.fechaFin == "") {
          mensajeErrorFechaFinD.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La fecha estimada de fin es un campo requerido';
          mensajeErrorFechaFinD.style.display = 'block';
        }

      }
    }

    function eliminarTarea(id) {
      const tarea = document.getElementById(id);
      const idM = "participantes_" + id;
      const modal = document.getElementById(idM);
      if (!tarea || !modal) {
        alert("Error");
      } else {
        const padre = tarea.parentNode;
        const siguienteFila = tarea.nextElementSibling;

        padre.removeChild(tarea);

        if (siguienteFila && siguienteFila.classList.contains("extra-row")) {
          padre.removeChild(siguienteFila);
        }

        const padre2 = modal.parentNode;
        padre2.removeChild(modal);

        contGeneral--;

        // Ajustar la página actual si es necesario
        const visibleRows = document.querySelectorAll('.clickable-row[data-visible="true"]');
        const totalVisibleRows = visibleRows.length;
        const totalPages = Math.ceil(totalVisibleRows / itemsPerPage);

        if (currentPage > totalPages) {
          currentPage = Math.max(1, totalPages); // Asegura que no vaya a una página negativa
        }
        showPage(currentPage);
        updatePagination();

        /*

        // Configura los Event Listeners para los botones de expansión
        setupExpandButtons();

        updatePagination();*/

        Swal.fire({
          position: 'top-end',
          icon: 'success',
          title: 'Tarea Eliminada',
          showConfirmButton: false,
          timer: 1000
        });
      }
    }
    //End Tareas

    //Partícipes
    function agregarParticipante(idP) {
      let part = "idParticipante_" + idP;
      let arr;
      if (parseFloat(idP) > 0) {
        arr = "titulo_2_" + idP;
      } else {
        if (parseFloat(idP) < 0) {
          arr = "titulo_1_" + idP;
        }
      }

      let participacion = {
        participante: document.getElementById(part).value,
        titulo: document.getElementById(arr).value
      };

      if (participacion.participante != "" && participacion.titulo != "") {
        var selectedOption = document.querySelector('#lis_Participantes option[value="' + participacion.participante + '"]');
        if (selectedOption) {
          const repetido = document.getElementById(participacion.titulo + '_' + participacion.participante);
          let listP = "listaParticipantes_" + idP;

          if (repetido != null) {
            Swal.fire({
              position: 'top-end',
              icon: 'warning',
              title: 'El usuario ya está en la lista',
              showConfirmButton: false,
              timer: 2000
            });

          } else {
            contPar++;

            let tbTabla = document.getElementById(listP);
            //alert(tbTabla);

            tbTabla.innerHTML += `
              <tr id="participante_${idP}_${contPar}">
               <td class="p-3 text-center"></td>
               <td class="p-3 text-center">
                   <input name="${participacion.titulo}_idParticipante" style="width: 100%; border: none; text-align: center;" id="${participacion.titulo}_${participacion.participante}" value="${participacion.participante}" readonly>
               </td>
               <td class="p-3 text-center">
                 <a class="boton-produccion" type="button" onclick="eliminarParticipante('${idP}_${contPar}', '${listP}')" style="color: #292b2c;">
                   <i class="fas fa-trash"></i>
                 </a>
               </td>
             </tr>
              `;

            Swal.fire({
              position: 'top-end',
              icon: 'success',
              title: 'Participante Agregado',
              showConfirmButton: false,
              timer: 1000
            });

            //llamar función calcularContTDTable
            ContTr(listP);
            document.getElementById(part).value = "";
          }
        } else {
          Swal.fire({
            position: 'top-end',
            icon: 'warning',
            title: 'El usuario no es válido',
            showConfirmButton: false,
            timer: 2000
          });
        }
      } else {
        Swal.fire({
          position: 'top-end',
          icon: 'warning',
          title: 'Campos requeridos',
          showConfirmButton: false,
          timer: 3000
        });
      }
    }

    function eliminarParticipante(idEP, TP) {
      var partE = "participante_" + idEP;
      const participacionE = document.getElementById(partE);

      if (!participacionE) {
        alert("Error");
      } else {
        const padre = participacionE.parentNode;
        padre.removeChild(participacionE);

        Swal.fire({
          position: 'top-end',
          icon: 'success',
          title: 'Participante Eliminado',
          showConfirmButton: false,
          timer: 1000
        });

        //llamar función calcularContTDTable
        ContTr(TP);
      }
    }
    //End Partícipes
  </script>
  <!--End Agregar, Eliminar Tareas y Partícipes-->



  <!--ContTr & ExpandButtons-->
  <script>
    // Agrega los Event Listeners para los botones de expansión después de agregar una nueva fila
    function setupExpandButtons() {
      var expandButtons = document.getElementsByClassName("expand-button");

      for (var i = 0; i < expandButtons.length; i++) {
        expandButtons[i].addEventListener("click", function () {
          var button = this;
          var clickableRow = button.closest(".clickable-row");
          var nextRow = clickableRow.nextElementSibling;

          if (nextRow.classList.contains("extra-row")) {
            nextRow.style.display = nextRow.style.display === "none" ? "table-row" : "none";

            var iconCollapse = button.querySelector(".icon-collapse");
            var iconExpand = button.querySelector(".icon-expand");

            if (nextRow.style.display === "none") {
              iconCollapse.style.display = "block";
              iconExpand.style.display = "none";
            } else {
              iconCollapse.style.display = "none";
              iconExpand.style.display = "block";
            }
          }
        });
      }
    }
    setupExpandButtons();

    //Calcular cont td table
    function ContTr(tbodyId) {
      var tbody = document.getElementById(tbodyId);
      var rows = tbody.getElementsByTagName("tr");
      var contador = 1;

      for (var i = 0; i < rows.length; i++) {
        var td = rows[i].getElementsByTagName("td")[0];
        td.textContent = contador;
        contador++;
      }
    }

    /* function tablaIndice() {
       // Obtener la referencia de la tabla
       const tabla = document.getElementById("ListaTareas");
 
       // Enumerar las filas
       let filas = tabla.getElementsByClassName("clickable-row");
       for (let i = 0; i < filas.length; i++) {
         let celdaNumero = filas[i].getElementsByTagName("td")[0];
         celdaNumero.textContent = i + 1;
       }
     }
     tablaIndice()*/
  </script>
  <!--End ContTr & ExpandButtons-->



  <!--Validar Envio-->
  <script>
    function validarCampos() {
      var producto = document.getElementById("idProducto");
      var encargado = document.getElementById("idEncargado");
      var cantidad = document.getElementById("cantidad");
      var fechaInicio = document.getElementById("fechaInicio");
      var fechaFin = document.getElementById("fechaFin");


      if (encargado.value == "") {
        mensajeErrorEncargado.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El usuario a cargo es un campo obligatorio';
        mensajeErrorEncargado.style.display = 'block';
      }

      if (producto.value == "") {
        mensajeErrorProducto.innerHTML = '<span class="icono fa fa-circle-xmark"></span>El producto es un campo obligatorio';
        mensajeErrorProducto.style.display = 'block';
      }

      if (cantidad.value == "") {
        mensajeErrorCantidad.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La cantidad a producir es un campo obligatorio';
        mensajeErrorCantidad.style.display = 'block';
      }

      if (fechaInicio.value == "") {
        mensajeErrorFechaInicio.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La fecha de inicio es un campo obligatorio';
        mensajeErrorFechaInicio.style.display = 'block';
      }

      if (fechaFin.value == "") {
        mensajeErrorFechaFin.innerHTML = '<span class="icono fa fa-circle-xmark"></span>La fecha de fin es un campo obligatorio';
        mensajeErrorFechaFin.style.display = 'block';
      }
    }

    function validarEnvio() {
      var list = document.getElementById('ListaTareas');
      var participantes = document.querySelectorAll('.TablaParticipantes'); // Agregar un punto antes de 'TablaParticipantes'

      var producto = document.getElementById("idProducto");
      var encargado = document.getElementById("idEncargado");
      var cantidad = document.getElementById("cantidad");
      var fechaInicio = document.getElementById("fechaInicio");
      var fechaFin = document.getElementById("fechaFin");

      if (encargado.value == "" || producto.value == "" || cantidad.value == "" || fechaInicio.value == "" || fechaFin.value == "") {
        //alert('campos obligatorios');
        /*Swal.fire({
          position: 'top-end',
          icon: 'warning',
          title: 'Campos Obligatorios',
          showConfirmButton: false,
          timer: 1500
        });*/
        validarCampos();
        return false; // Detener el envío del formulario
      }

      // Verificar si la lista tiene al menos un elemento
      if (list.childElementCount === 0) {
        //alert("No se puede enviar el formulario porque aún no se ha agregado nungún ");
        Swal.fire({
          position: 'top-end',
          icon: 'warning',
          title: 'No hay ninguna tarea a realizar',
          showConfirmButton: false,
          timer: 3000
        });
        return false; // Detener el envío del formulario
      }


      for (var i = 0; i < participantes.length; i++) {
        var tarea = participantes[i];
        if (tarea.childElementCount === 0) {
          //var id = tarea.id;
          var match = tarea.getAttribute("contador"); //id.match(/listaParticipantes_(\d+)/);
          var mensaje = match ? "No hay participantes en la tarea #" + match : "No hay participantes en la tarea #...";

          Swal.fire({
            position: 'top-end',
            icon: 'warning',
            title: mensaje,
            showConfirmButton: false,
            timer: 3000
          });
          return false; // Detener el envío del formulario
        }
      }

      // Permite el envío del formulario
      return true;
    }
  </script>
  <!--End Validar Envio-->



  <!--Inicio footer-->

  <!--Fin footer-->
  <!--Bootstrap-->

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    // Inicializar los popovers
    var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
    var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
      return new bootstrap.Popover(popoverTriggerEl);
    });
  </script>


  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
    crossorigin="anonymous"></script>
  <!--   Core JS Files   -->
  <script src="/assets/js/core/jquery.min.js"></script>
  <script src="/assets/js/core/popper.min.js"></script>
  <script src="/assets/js/core/bootstrap.min.js"></script>
  <script src="/assets/js/plugins/perfect-scrollbar.jquery.min.js"></script>

  <!-- Chart JS -->
  <script src="/assets/js/plugins/chartjs.min.js"></script>
  <!--  Notifications Plugin    -->
  <script src="/assets/js/plugins/bootstrap-notify.js"></script>
  <!-- Control Center for Now Ui Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="/assets/js/now-ui-dashboard.min.js?v=1.5.0" type="text/javascript"></script>


  <!--Detalles de los detalles-->
  <script>
    // Desplegar detalle del detalle
    document.addEventListener("DOMContentLoaded", function () {
      var expandButtons = document.getElementsByClassName("expand-button");

      for (var i = 0; i < expandButtons.length; i++) {
        expandButtons[i].addEventListener("click", function () {
          var button = this;
          var clickableRow = button.closest(".clickable-row");
          var nextRow = clickableRow.nextElementSibling;

          if (nextRow.classList.contains("extra-row")) {
            nextRow.style.display = nextRow.style.display === "none" ? "table-row" : "none";

            var iconCollapse = button.querySelector(".icon-collapse");
            var iconExpand = button.querySelector(".icon-expand");

            if (nextRow.style.display === "none") {
              iconCollapse.style.display = "block";
              iconExpand.style.display = "none";
            } else {
              iconCollapse.style.display = "none";
              iconExpand.style.display = "block";
            }
          }
        });
      }
    });

  </script>


  <script>
    const itemsPerPage = 5; // Define el número de registros por página
    let currentPage = 1;

    function showPage(page) {
      const rows = document.querySelectorAll('.clickable-row');
      const startIndex = (page - 1) * itemsPerPage;
      const endIndex = startIndex + itemsPerPage;

      rows.forEach((row, index) => {
        if (index >= startIndex && index < endIndex) {
          row.style.display = 'table-row';
          row.setAttribute('data-visible', 'true');
        } else {
          row.style.display = 'none';
          row.setAttribute('data-visible', 'false');
        }

        // Oculta los elementos <tr> extra
        const extraRow = row.nextElementSibling;
        if (extraRow && extraRow.classList.contains('extra-row')) {
          extraRow.style.display = 'none';
        }
      });
    }

    function updatePagination() {
      const rows = document.querySelectorAll('.clickable-row');
      const totalRows = rows.length;
      const totalPages = Math.ceil(totalRows / itemsPerPage);

      if (currentPage === 1) {
        document.querySelector('.prev-btn').disabled = true;
      } else {
        document.querySelector('.prev-btn').disabled = false;
      }

      if (currentPage === totalPages) {
        document.querySelector('.next-btn').disabled = true;
      } else {
        document.querySelector('.next-btn').disabled = false;
      }
    }

    document.querySelector('.prev-btn').addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        showPage(currentPage);
        updatePagination();
      }
    });

    document.querySelector('.next-btn').addEventListener('click', () => {
      const rows = document.querySelectorAll('.clickable-row');
      const totalRows = rows.length;
      const totalPages = Math.ceil(totalRows / itemsPerPage);

      if (currentPage < totalPages) {
        currentPage++;
        showPage(currentPage);
        updatePagination();
      }
    });

    // Mostrar la primera página al cargar la tabla
    showPage(currentPage);
    updatePagination();

    // Configura los Event Listeners iniciales para los botones de expansión
    setupExpandButtons();

  </script>

  <!--End Detalles de los detalles-->






  <script>
    function solonumeros(e) {
      key = e.keyCode || e.which;

      teclado = String.fromCharCode(key);

      letras = "1234567890";

      especiales = "8-37-38-46";

      teclado_especial = false;

      for (var i in especiales) {
        if (key == especiales[i]) {
          teclado_especial = true; break
        }
      }

      if (letras.indexOf(teclado) == -1 && !teclado_especial) {
        return false;
      }

    }

    function solomotivo(e) {
    key = e.keyCode || e.which;

    teclado = String.fromCharCode(key);

    letras = "qwertyuiopasdfghjklñzxcvbnmQWERTYUIOPASDFGHJKLÑZXCVBNM áÁéÉíÍóÓúÚ1234567890$_-()¿?*/+.,;:!¡";

    especiales = "8-37-38-46";

    teclado_especial = false;

    for (var i in especiales) {
      if (key == especiales[i]) {
        teclado_especial = true; break
      }
    }

    if (letras.indexOf(teclado) == -1 && !teclado_especial) {
      return false;
    }

  }

    function solonumeros2(e) {
      key = e.keyCode || e.which;

      teclado = String.fromCharCode(key);

      letras = "1234567890-";

      especiales = "8-37-38-46";

      teclado_especial = false;

      for (var i in especiales) {
        if (key == especiales[i]) {
          teclado_especial = true; break
        }
      }

      if (letras.indexOf(teclado) == -1 && !teclado_especial) {
        return false;
      }

    }


    /*
    function puntos(valor){
      return(valor.toLocaleString('es-CO');)
    }*/

  </script>




  <script>
    //Actualizar valor
    function updateValueInput(input) {
      input.setAttribute("value", input.value);
    }

    function updateValueTextarea(textarea) {
      textarea.textContent = textarea.value;
    }

    function updateValueSelect(select) {
      var selectedOption = select.options[select.selectedIndex];

      // Remover el atributo "selected" de todas las opciones
      for (var i = 0; i < select.options.length; i++) {
        select.options[i].removeAttribute("selected");
      }

      // Agregar el atributo "selected" a la opción seleccionada
      selectedOption.setAttribute("selected", "selected");
    }
  </script>